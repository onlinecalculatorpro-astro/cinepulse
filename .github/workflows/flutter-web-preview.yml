# .github/workflows/flutter-web-preview.yml
name: Web Preview (Flutter - ROOT, manual)

on:
  workflow_dispatch:
    inputs:
      apiBase:
        description: "API base URL (e.g. https://api.onlinecalculatorpro.org)"
        required: false
        default: ""
      deepLinkBase:
        description: "Deep link base (e.g. https://cinepulse.netlify.app/#/s)"
        required: false
        default: ""

env:
  # secrets → manual inputs → fallback
  API_BASE_URL: ${{ secrets.API_BASE_URL || inputs.apiBase || 'https://api.onlinecalculatorpro.org' }}
  DEEP_LINK_BASE: ${{ secrets.DEEP_LINK_BASE || inputs.deepLinkBase || 'https://cinepulse.netlify.app/#/s' }}

permissions:
  contents: read

concurrency:
  group: web-preview-${{ github.ref_name }}
  cancel-in-progress: false

jobs:
  build:
    name: Build Flutter Web
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          flutter-version: "3.35.6"

      - name: Show tool versions
        run: |
          flutter --version
          dart --version

      - name: Cache pub packages
        uses: actions/cache@v4
        with:
          path: ~/.pub-cache
          key: pub-cache-${{ runner.os }}-${{ hashFiles('pubspec.lock') }}
          restore-keys: |
            pub-cache-${{ runner.os }}-

      - name: flutter pub get
        run: flutter pub get

      - name: Compute extra build args
        id: args
        shell: bash
        run: |
          if flutter build web -h | grep -q -- '--web-renderer'; then
            echo "args=--web-renderer html" >> "$GITHUB_OUTPUT"
          else
            echo "args=" >> "$GITHUB_OUTPUT"
          fi

      - name: Build (release)
        run: |
          flutter build web --release \
            ${{ steps.args.outputs.args }} \
            --dart-define=API_BASE_URL="${{ env.API_BASE_URL }}" \
            --dart-define=DEEP_LINK_BASE="${{ env.DEEP_LINK_BASE }}"

      - name: List build outputs
        run: ls -lah build/web || true

      - name: Verify dart-defines (best-effort)
        run: |
          set +e
          grep -R "${API_BASE_URL}" build/web/main.dart.js >/dev/null \
            && echo "Found API_BASE_URL" || echo "Warning: API_BASE_URL not found (minified)"
          grep -R "${DEEP_LINK_BASE}" build/web/main.dart.js >/dev/null \
            && echo "Found DEEP_LINK_BASE" || echo "Warning: DEEP_LINK_BASE not found (minified)"
          set -e

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: web-preview
          path: build/web
          retention-days: 7

  deploy:
    name: Deploy to Netlify
    needs: build
    runs-on: ubuntu-latest
    if: ${{ secrets.NETLIFY_AUTH_TOKEN != '' && secrets.NETLIFY_SITE_ID != '' }}
    concurrency:
      group: netlify-prod
      cancel-in-progress: false

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: web-preview
          path: build/web

      - name: Add SPA redirect
        run: echo "/* /index.html 200" > build/web/_redirects

      - name: Setup Node (Netlify CLI)
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Deploy (prod)
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
        run: npx --yes netlify-cli@17 deploy --dir=build/web --prod --message "CI deploy $GITHUB_SHA"
