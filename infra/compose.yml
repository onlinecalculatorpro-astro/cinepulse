# =============================================================================
# CinePulse / NutshellNews — Ingestion & Delivery Stack (Docker Compose)
# =============================================================================
# Data flow:
#   scheduler →(enqueue "events")→ workers →(enqueue "sanitize")→ sanitizer
#   sanitizer → FEED_KEY (Redis) → api (read-only) → clients
#   webhooks →(enqueue "events")→ workers        (on YouTube/RSS pushes)
# =============================================================================

# ---------- Shared anchors ----------
x-env: &env_defaults
  ENV: prod
  TZ: Asia/Kolkata

  # Redis (shared queues + state)
  REDIS_URL: redis://redis:6379/0
  RQ_REDIS_URL: redis://redis:6379/0

  # Public feed list (only sanitizer mutates this)
  FEED_KEY: feed:items

  # Root source config (includes vertical YAMLs via include_verticals)
  SOURCES_FILE: /app/infra/source.yml

  # External keys consumed by workers (e.g. TMDB)
  TMDB_API_KEY: ${TMDB_API_KEY:-}

x-secure: &secure_defaults
  read_only: true
  tmpfs: ["/tmp", "/var/tmp"]
  stop_grace_period: 10s
  security_opt:
    - no-new-privileges:true
  ulimits:
    nofile:
      soft: 65535
      hard: 65535
  logging:
    driver: json-file
    options:
      max-size: "10m"
      max-file: "3"

# ---------- Services ----------
services:
  # --------------------------------------------------------------------------
  # Redis (state + queues)
  # --------------------------------------------------------------------------
  redis:
    image: redis:7-alpine
    command: ["redis-server", "--save", "", "--appendonly", "yes"]
    restart: unless-stopped
    volumes:
      - redis-data:/data
    ports:
      - "127.0.0.1:6379:6379"
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep -q PONG"]
      interval: 10s
      timeout: 3s
      retries: 5
    <<: *secure_defaults

  # --------------------------------------------------------------------------
  # Scheduler (periodic polling; merges infra/source.yml + verticals)
  # --------------------------------------------------------------------------
  scheduler:
    build:
      context: ..
      dockerfile: infra/Dockerfile
      target: scheduler
    restart: unless-stopped
    env_file: ../.env
    environment:
      <<: *env_defaults
      # Optional runtime overrides (uncomment to force):
      # ONE_SHOT: "1"            # run a single cycle then exit (for manual tests)
      # LOG_LEVEL: "info"
    depends_on:
      redis:
        condition: service_healthy
    command: ["python", "-m", "apps.scheduler.main"]
    <<: *secure_defaults

  # --------------------------------------------------------------------------
  # Webhooks (YouTube PubSubHubbub / RSS WebSub → enqueue fresh polls)
  # --------------------------------------------------------------------------
  webhooks:
    build:
      context: ..
      dockerfile: infra/Dockerfile
      target: webhooks
    restart: unless-stopped
    env_file: ../.env
    environment: *env_defaults
    depends_on:
      redis:
        condition: service_healthy
    ports:
      - "127.0.0.1:18001:8000"
    command: >
      uvicorn apps.webhooks.main:app --host 0.0.0.0 --port 8000
    <<: *secure_defaults

  # --------------------------------------------------------------------------
  # Workers (RQ worker "events" → normalize raw → enqueue "sanitize")
  # --------------------------------------------------------------------------
  workers:
    build:
      context: ..
      dockerfile: infra/Dockerfile
      target: worker
    restart: unless-stopped
    env_file: ../.env
    environment: *env_defaults
    depends_on:
      redis:
        condition: service_healthy
    command: >
      sh -lc 'rq worker -u "${REDIS_URL:-redis://redis:6379/0}" events'
    <<: *secure_defaults

  # --------------------------------------------------------------------------
  # Sanitizer (RQ worker "sanitize" → dedupe → push to FEED_KEY + fanout)
  # --------------------------------------------------------------------------
  sanitizer:
    build:
      context: ..
      dockerfile: infra/Dockerfile
      target: worker
    restart: unless-stopped
    env_file: ../.env
    environment:
      <<: *env_defaults
      SEEN_KEY: feed:seen_signatures
      MAX_FEED_LEN: "200"
      FEED_PUBSUB: feed:pub
      FEED_STREAM: feed:stream
      FEED_STREAM_MAXLEN: "5000"
      ENABLE_PUSH_NOTIFICATIONS: "0"   # set "1" only if push worker is running
    depends_on:
      redis:
        condition: service_healthy
    command: >
      sh -lc 'rq worker -u "${REDIS_URL:-redis://redis:6379/0}" sanitize'
    <<: *secure_defaults

  # --------------------------------------------------------------------------
  # API (read-only; serves feed/search/story + SSE/WebSocket realtime)
  # --------------------------------------------------------------------------
  api:
    build:
      context: ..
      dockerfile: infra/Dockerfile
      target: api
    restart: unless-stopped
    env_file: ../.env
    environment: *env_defaults
    depends_on:
      redis:
        condition: service_healthy
      sanitizer:
        condition: service_started
    ports:
      - "127.0.0.1:18000:8000"
    command: >
      gunicorn -w 2 -k uvicorn.workers.UvicornWorker
      -b 0.0.0.0:8000 apps.api.app.main:app
    # (Healthcheck optional; uncomment if curl/wget exists in image)
    # healthcheck:
    #   test: ["CMD-SHELL", "wget -qO- localhost:8000/health || exit 1"]
    #   interval: 20s
    #   timeout: 3s
    #   retries: 5
    <<: *secure_defaults

  # --------------------------------------------------------------------------
  # Push (optional) — notifications pipeline (stub; off by default)
  # --------------------------------------------------------------------------
  # push:
  #   build:
  #     context: ..
  #     dockerfile: infra/Dockerfile
  #     target: worker
  #   restart: unless-stopped
  #   env_file: ../.env
  #   environment:
  #     <<: *env_defaults
  #     PUSH_ENABLED: "1"
  #     PUSH_SET: "push:tokens"
  #     PUSH_META: "push:meta"
  #     PUSH_TOPIC_PREFIX: "push:topic:"
  #     PUSH_DEFAULT_TOPIC: "all"
  #     PUSH_MAX_TOKENS_PER_STORY: "5000"
  #     PUSH_BODY_MAX_CHARS: "180"
  #     ENABLE_PUSH_NOTIFICATIONS: "1"
  #   depends_on:
  #     redis:
  #       condition: service_healthy
  #   command: >
  #     sh -lc 'rq worker -u "${REDIS_URL:-redis://redis:6379/0}" push'
  #   <<: *secure_defaults

# ---------- Volumes ----------
volumes:
  redis-data: {}
