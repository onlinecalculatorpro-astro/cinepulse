name: Android Debug (APK - manual)

on:
  workflow_dispatch:
    inputs:
      apiBase:
        description: "API base URL (e.g. https://api.onlinecalculatorpro.org)"
        required: false
        default: ""
      deepLinkBase:
        description: "Deep link base (e.g. https://cinepulse.netlify.app/#/s)"
        required: false
        default: ""
      applicationId:
        description: "Android applicationId / package (must match google-services.json)"
        required: false
        default: "api.onlinecalculatorpro.cinepulse"

env:
  API_BASE_URL: ${{ secrets.API_BASE_URL || inputs.apiBase || 'https://api.onlinecalculatorpro.org' }}
  DEEP_LINK_BASE: ${{ secrets.DEEP_LINK_BASE || inputs.deepLinkBase || 'https://cinepulse.netlify.app/#/s' }}
  APPLICATION_ID: ${{ secrets.ANDROID_APPLICATION_ID || inputs.applicationId || 'api.onlinecalculatorpro.cinepulse' }}
  # Optional: raw JSON or base64; used only if the file is not in the repo
  FIREBASE_GOOGLE_SERVICES_JSON: ${{ secrets.FIREBASE_GOOGLE_SERVICES_JSON }}

jobs:
  build:
    name: Build debug APKs
    runs-on: ubuntu-latest
    permissions:
      contents: read
    concurrency:
      group: android-debug-${{ github.ref_name }}
      cancel-in-progress: false

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Java (Temurin 17)
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "17"

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          flutter-version: "3.35.6"

      - name: Show versions
        run: |
          flutter --version
          dart --version
          java -version

      - name: Cache pub packages
        uses: actions/cache@v4
        with:
          path: ~/.pub-cache
          key: pub-cache-${{ runner.os }}-${{ hashFiles('pubspec.lock') }}
          restore-keys: |
            pub-cache-${{ runner.os }}-

      - name: Cache Gradle
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-${{ runner.os }}-${{ hashFiles('android/gradle/wrapper/gradle-wrapper.properties') }}
          restore-keys: |
            gradle-${{ runner.os }}-

      - name: flutter pub get
        run: flutter pub get

      # Do NOT regenerate Android on CI (avoids template main.dart)
      # If you need to refresh scaffolding, do it locally and commit.

      - name: Ensure Android local.properties
        shell: bash
        run: |
          set -euo pipefail
          mkdir -p android
          echo "sdk.dir=${ANDROID_SDK_ROOT:-${ANDROID_HOME}}" > android/local.properties
          FLUTTER_BIN="$(which flutter)"
          FLUTTER_SDK="$(dirname "$(dirname "$FLUTTER_BIN")")"
          echo "flutter.sdk=${FLUTTER_SDK}" >> android/local.properties
          echo "== android/local.properties ==" && cat android/local.properties

      - name: Guard: no Kotlin DSL gradle files (Flutter expects Groovy)
        shell: bash
        run: |
          set -euo pipefail
          if compgen -G "android/*.gradle.kts" >/dev/null || compgen -G "android/app/*.gradle.kts" >/dev/null; then
            echo "::error::Kotlin DSL Gradle files (*.gradle.kts) found. Convert to Groovy (build.gradle, settings.gradle)."
            exit 1
          fi

      - name: Ensure google-services.json
        shell: bash
        run: |
          set -euo pipefail
          mkdir -p android/app
          if [[ -f android/app/google-services.json ]]; then
            echo "google-services.json found in repository."
          elif [[ -n "${FIREBASE_GOOGLE_SERVICES_JSON:-}" ]]; then
            echo "Writing google-services.json from secret."
            if [[ "${FIREBASE_GOOGLE_SERVICES_JSON:0:1}" == "{" ]]; then
              printf '%s' "${FIREBASE_GOOGLE_SERVICES_JSON}" > android/app/google-services.json
            else
              printf '%s' "${FIREBASE_GOOGLE_SERVICES_JSON}" | base64 -d > android/app/google-services.json
            fi
          else
            echo "::error::google-services.json is missing and no secret was provided."
            exit 1
          fi

          # Sanity: show package_name and compare with APPLICATION_ID
          PKG=$(grep -o '"package_name":[[:space:]]*"[^"]*"' android/app/google-services.json | sed 's/.*"package_name":[[:space:]]*"\([^"]*\)".*/\1/' | head -n1 || true)
          echo "google-services.json package_name = ${PKG:-<unknown>}"
          if [[ -n "${PKG:-}" && -n "${APPLICATION_ID:-}" && "$PKG" != "$APPLICATION_ID" ]]; then
            echo "::warning::APPLICATION_ID ($APPLICATION_ID) != google-services.json package_name ($PKG)"
          fi

      - name: Verify app entrypoint (optional)
        shell: bash
        run: |
          set -euo pipefail
          if ! grep -R "CinePulseApp" -n lib/main.dart lib 2>/dev/null; then
            echo "::warning::CinePulseApp not found in lib/. If you see the Flutter template screen, check lib/main.dart."
          fi

      - name: Build debug APKs (per ABI)
        run: |
          flutter build apk --debug --split-per-abi \
            --dart-define=API_BASE_URL="${{ env.API_BASE_URL }}" \
            --dart-define=DEEP_LINK_BASE="${{ env.DEEP_LINK_BASE }}"

      - name: List APKs
        run: ls -lh build/app/outputs/flutter-apk || true

      - name: Upload APK artifacts
        uses: actions/upload-artifact@v4
        with:
          name: android-apk-debug
          path: build/app/outputs/flutter-apk/*.apk
          if-no-files-found: error
          retention-days: 7
