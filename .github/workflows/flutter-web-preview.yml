name: Web Build â†’ Deploy (Manual)

on:
  workflow_dispatch: {}

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  build:
    name: Build Flutter Web
    runs-on: ubuntu-latest
    env:
      API_BASE_URL:   ${{ secrets.API_BASE_URL }}                           # required
      SHARE_BASE_URL: ${{ secrets.SHARE_BASE_URL || 'https://app.nutshellnewsapp.com' }}
    steps:
      - uses: actions/checkout@v4

      - uses: subosito/flutter-action@v2
        with:
          channel: stable
          flutter-version: '3.35.6'

      - name: Enable web
        run: flutter config --enable-web

      - name: Install deps
        run: flutter pub get

      - name: Compute renderer arg (use html if supported)
        id: args
        shell: bash
        run: |
          if flutter build web -h | grep -q -- '--web-renderer'; then
            echo "arg=--web-renderer html" >> "$GITHUB_OUTPUT"
          else
            echo "arg=" >> "$GITHUB_OUTPUT"
          fi

      - name: Build (release)
        shell: bash
        run: |
          set -euo pipefail
          api="${API_BASE_URL%/}"
          share="${SHARE_BASE_URL%/}"
          if [ -z "$api" ]; then
            echo "::error title=Missing secret::API_BASE_URL is required"; exit 1
          fi

          flutter build web --release \
            ${{ steps.args.outputs.arg }} \
            --pwa-strategy=none \
            --dart-define=API_BASE_URL="$api" \
            --dart-define=SHARE_BASE_URL="$share" \
            --dart-define=DEEP_LINK_BASE="$share"

          mkdir -p build/web
          cat > build/web/version.json <<EOF
          {"commit":"${GITHUB_SHA}","built_at":"$(date -u +%FT%TZ)","api_base":"${api}","share_base":"${share}"}
          EOF

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: web-build
          path: build/web

  deploy:
    name: Deploy to VPS
    needs: build
    runs-on: ubuntu-latest
    env:
      VPS_HOST:        ${{ secrets.VPS_HOST }}
      VPS_USER:        ${{ secrets.VPS_USER }}
      SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
      SSH_PORT:        ${{ secrets.SSH_PORT || '22' }}
      WEB_ROOT:        ${{ secrets.WEB_ROOT || '/var/www/nutshellnewsapp_web' }}
      SHARE_BASE_URL:  ${{ secrets.SHARE_BASE_URL || 'https://app.nutshellnewsapp.com' }}
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: web-build
          path: web-build

      - name: Prepare SSH
        shell: bash
        run: |
          set -euo pipefail
          mkdir -p ~/.ssh
          printf '%s\n' "$SSH_PRIVATE_KEY" > ~/.ssh/id_vps
          sed -i 's/\r$//' ~/.ssh/id_vps
          chmod 600 ~/.ssh/id_vps
          ssh-keyscan -p "$SSH_PORT" -H "$VPS_HOST" >> ~/.ssh/known_hosts
          ssh -i ~/.ssh/id_vps -p "$SSH_PORT" "$VPS_USER@$VPS_HOST" "mkdir -p '$WEB_ROOT'"

      - name: Rsync files to VPS
        shell: bash
        run: |
          sudo apt-get update -y && sudo apt-get install -y rsync
          rsync -az --delete \
            --chmod=D2755,F644 \
            -e "ssh -i ~/.ssh/id_vps -p $SSH_PORT" \
            web-build/ "$VPS_USER@$VPS_HOST:$WEB_ROOT/"

      - name: Reload nginx (best-effort)
        run: ssh -i ~/.ssh/id_vps -p "$SSH_PORT" "$VPS_USER@$VPS_HOST" \
             "(systemctl reload nginx || service nginx reload || true)"

      - name: Smoke test
        shell: bash
        run: |
          set -euo pipefail
          base="${SHARE_BASE_URL%/}"
          echo "HEAD $base"
          curl -fsSI "$base" | sed -n '1,12p'
          echo "GET  $base/version.json"
          curl -fsS  "$base/version.json" | sed -n '1,120p'
