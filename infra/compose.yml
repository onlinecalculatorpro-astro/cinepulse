version: "3.9"

x-env: &defaults
  ENV: "prod"
  TZ: "Asia/Kolkata"
  REDIS_URL: "redis://redis:6379/0"
  FEED_KEY: "feed:items"
  SEEN_KEY: "feed:seen"
  # point the app to YOUR catalog file name:
  SOURCES_FILE: "/app/infra/source.yml"
  TMDB_API_KEY: "${TMDB_API_KEY:-}"

services:
  redis:
    image: redis:7-alpine
    command: ["redis-server","--save","","--appendonly","yes"]
    restart: unless-stopped
    volumes:
      - redis-data:/data
    ports:
      - "127.0.0.1:6379:6379"

  api:
    build:
      context: ..
      dockerfile: Dockerfile
      target: api
    image: cinepulse-api:latest
    restart: unless-stopped
    environment:
      <<: *defaults
    depends_on:
      - redis
    # Bind to localhost so host Nginx can proxy (Option A CORS)
    ports:
      - "127.0.0.1:18000:8000"
    command: >
      gunicorn -w 2 -k uvicorn.workers.UvicornWorker
      -b 0.0.0.0:8000 apps.api.app.main:app
    read_only: true
    tmpfs:
      - /tmp

  workers:
    build:
      context: ..
      dockerfile: Dockerfile
      target: worker
    image: cinepulse-workers:latest
    restart: unless-stopped
    environment:
      <<: *defaults
    depends_on:
      - redis
    command: ["python","-m","apps.workers.main"]
    read_only: true
    tmpfs:
      - /tmp

  scheduler:
    build:
      context: ..
      dockerfile: Dockerfile
      target: scheduler
    image: cinepulse-scheduler:latest
    restart: unless-stopped
    environment:
      <<: *defaults
    depends_on:
      - redis
    command: ["python","-m","apps.scheduler.main"]
    read_only: true
    tmpfs:
      - /tmp

  webhooks:
    build:
      context: ..
      dockerfile: Dockerfile
    # target: webhooks   # uncomment if you have that Dockerfile stage
    image: cinepulse-webhooks:latest
    restart: unless-stopped
    environment:
      <<: *defaults
    depends_on:
      - redis
    ports:
      - "127.0.0.1:18001:8000"
    command: ["uvicorn","apps.webhooks.main:app","--host","0.0.0.0","--port","8000"]
    read_only: true
    tmpfs:
      - /tmp

volumes:
  redis-data:
