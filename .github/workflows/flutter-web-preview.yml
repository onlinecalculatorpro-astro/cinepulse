name: Web Deploy (Manual)

on:
  workflow_dispatch: {}   # manual trigger only

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      # Required secrets
      API_BASE_URL:    ${{ secrets.API_BASE_URL }}
      VPS_HOST:        ${{ secrets.VPS_HOST }}
      VPS_USER:        ${{ secrets.VPS_USER }}
      SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
      # Optional overrides
      SSH_PORT:        ${{ secrets.SSH_PORT || '22' }}
      WEB_ROOT:        ${{ secrets.WEB_ROOT || '/var/www/nutshellnewsapp_web' }}
      SHARE_BASE_URL:  ${{ secrets.SHARE_BASE_URL || 'https://app.nutshellnewsapp.com' }}

    steps:
      - uses: actions/checkout@v4

      - uses: subosito/flutter-action@v2
        with:
          channel: stable
          flutter-version: '3.35.6'

      - name: Install deps
        run: flutter pub get

      - name: Build Flutter web (release)
        shell: bash
        run: |
          set -euo pipefail
          api="${API_BASE_URL%/}"
          share="${SHARE_BASE_URL%/}"
          if [ -z "$api" ]; then
            echo "::error title=Missing secret::API_BASE_URL is required"; exit 1
          fi
          flutter build web --release \
            --web-renderer html \
            --pwa-strategy=none \
            --dart-define=API_BASE_URL="$api" \
            --dart-define=SHARE_BASE_URL="$share" \
            --dart-define=DEEP_LINK_BASE="$share"

      - name: Prepare SSH
        shell: bash
        run: |
          set -euo pipefail
          mkdir -p ~/.ssh
          printf '%s\n' "$SSH_PRIVATE_KEY" > ~/.ssh/id_vps
          sed -i 's/\r$//' ~/.ssh/id_vps
          chmod 600 ~/.ssh/id_vps
          ssh-keyscan -p "$SSH_PORT" -H "$VPS_HOST" >> ~/.ssh/known_hosts
          ssh -i ~/.ssh/id_vps -p "$SSH_PORT" "$VPS_USER@$VPS_HOST" "mkdir -p '$WEB_ROOT'"

      - name: Rsync to VPS
        shell: bash
        run: |
          sudo apt-get update -y && sudo apt-get install -y rsync
          rsync -az --delete \
            --chmod=D2755,F644 \
            -e "ssh -i ~/.ssh/id_vps -p $SSH_PORT" \
            build/web/ "$VPS_USER@$VPS_HOST:$WEB_ROOT/"

      - name: Reload nginx (best-effort)
        run: ssh -i ~/.ssh/id_vps -p "$SSH_PORT" "$VPS_USER@$VPS_HOST" \
             "(systemctl reload nginx || service nginx reload || true)"
